name: Publish to npmjs.com

env:
  APP_NAME: dothyphen-napi

on:
  workflow_call:
    secrets:
      NPM_AUTOMATION_TOKEN:
        required: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |-
              cd dothyphen-napi &&
              set -e &&
              yarn build --target x86_64-unknown-linux-gnu &&
              strip *.node
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |-
              cd dothyphen-napi &&
              set -e &&
              yarn build &&
              strip *.node
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |-
              cd dothyphen-napi &&
              set -e &&
              yarn build --target aarch64-unknown-linux-gnu &&
              aarch64-unknown-linux-gnu-strip *.node
          - host: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            setup: |-
              sudo apt-get update &&
              sudo apt-get install gcc-arm-linux-gnueabihf -y
            build: |-
              cd dothyphen-napi &&
              yarn build --target armv7-unknown-linux-gnueabihf &&
              arm-linux-gnueabihf-strip *.node
          - host: ubuntu-latest
            target: aarch64-linux-android
            build: |-
              sudo apt-get update &&
              cd dothyphen-napi &&
              yarn build --target aarch64-linux-android &&
              ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip *.node
          - host: ubuntu-latest
            target: armv7-linux-androideabi
            build: |-
              cd dothyphen-napi &&
              yarn build --target armv7-linux-androideabi &&
              ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip *.node
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |-
              cd dothyphen-napi &&
              set -e &&
              rustup target add aarch64-unknown-linux-musl &&
              yarn build --target aarch64-unknown-linux-musl &&
              /aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip *.node
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |-
              cd dothyphen-napi &&
              yarn build &&
              strip -x *.node
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |-
              cd dothyphen-napi &&
              yarn build --target aarch64-apple-darwin &&
              strip -x *.node
          - host: windows-latest
            build: |-
              cd dothyphen-napi &&
              yarn build
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            build: |-
              cd dothyphen-napi &&
              yarn build --target i686-pc-windows-msvc
            target: i686-pc-windows-msvc
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: |-
              cd dothyphen-napi &&
              yarn build --target aarch64-pc-windows-msvc
    name: Build ${{ matrix.settings.target }} for node@18
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: 'dothyphen-napi/yarn.lock'
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.settings.docker }}
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Set Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' }}
        with:
          version: 0.10.1
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Setup Node.js x86
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        run: cd dothyphen-napi && yarn config set supportedArchitectures.cpu "ia32"
        shell: bash
      - name: Install dependencies
        run: cd dothyphen-napi && yarn install
      - name: Setup Node.js x86
        uses: actions/setup-node@v3
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: 'dothyphen-napi/yarn.lock'
          architecture: x86
      - name: Build in Docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: dothyphen-napi/${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  build-universal-macOS:
    name: Build universal-apple-darwin for node@18
    needs:
      - build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
          cache: yarn
          cache-dependency-path: 'dothyphen-napi/yarn.lock'
      - name: Install dependencies
        run: cd dothyphen-napi && yarn install
      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v3
        with:
          name: bindings-x86_64-apple-darwin
          path: dothyphen-napi/artifacts
      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: bindings-aarch64-apple-darwin
          path: dothyphen-napi/artifacts
      - name: Combine binaries
        run: cd dothyphen-napi && yarn universal
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-universal-apple-darwin
          path: dothyphen-napi/${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  publish:
      name: Publish dothyphen-napi to npmjs.com
      runs-on: ubuntu-latest
      needs:
        - build
        - build-universal-macOS
      steps:
        - uses: actions/checkout@v3
          with:
            ref: ${{ inputs.tag }}
        - name: Setup node
          uses: actions/setup-node@v3
          with:
            node-version: '18.x'
            registry-url: 'https://registry.npmjs.org'
        - name: Install dependencies
          run: cd dothyphen-napi && yarn install
        - name: Download all artifacts
          uses: actions/download-artifact@v3
          with:
            path: dothyphen-napi/artifacts
        - name: Move artifacts
          run: cd dothyphen-napi && yarn artifacts
        - name: Publish package
          run: cd dothyphen-napi && npm publish --access public
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN }}